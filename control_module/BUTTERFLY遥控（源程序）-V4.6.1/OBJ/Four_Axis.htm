<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\Four_Axis.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\Four_Axis.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060020: Last Updated: Sun Jan 24 23:19:15 2016
<BR><P>
<H3>Maximum Stack Usage =         92 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; My_System_Init &rArr; adcInit1 &rArr; GPIO_Init
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[81]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[17]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17]">ADC1_COMP_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[27]">CEC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[14]">DMA1_Channel1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[15]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[16]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[10]">EXTI0_1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[11]">EXTI2_3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[12]">EXTI4_15_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[21]">I2C1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[22]">I2C2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[24]">SPI2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[28]">SystemInit</a> from system_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(.text)
 <LI><a href="#[1d]">TIM14_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1e]">TIM15_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1f]">TIM16_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[20]">TIM17_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[18]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[19]">TIM1_CC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1a]">TIM2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1b]">TIM3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1c]">TIM6_DAC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[13]">TS_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[25]">USART1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[26]">USART2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[2a]">__main</a> from __main.o(!!!main) referenced from startup_stm32f0xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[85]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2e]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[86]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[32]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[87]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[88]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[89]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[90]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[92]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[94]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[95]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[96]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[97]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[98]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[99]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[37]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a2]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[31]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[33]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; My_System_Init &rArr; adcInit1 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[83]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[36]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a6]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[38]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3a]"></a>Inspaire</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Inspaire &rArr; adcInit6 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_TxPacket
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_IRQ
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>NVIC_Configuration</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>My_System_Init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = My_System_Init &rArr; adcInit1 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_GPIO_Interrupt_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_CHECK
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01_INIT
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_INIT
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_INIT
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = main &rArr; My_System_Init &rArr; adcInit1 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a8]"></a>System_STate_Check</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>delay_Ms_Loop</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDALL_FLASH
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[3c]"></a>adcInit0</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit0 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[3b]"></a>adcInit1</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit1 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[3d]"></a>adcInit4</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit4 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[3e]"></a>adcInit6</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit6 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[41]"></a>adcInit2</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit2 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[40]"></a>adcInit3</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit3 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[42]"></a>adcInit5</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, drv_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = adcInit5 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[4e]"></a>LED_INIT</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
</UL>

<P><STRONG><a name="[4f]"></a>Key_INIT</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Key_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
</UL>

<P><STRONG><a name="[60]"></a>LEDALL_FLASH</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Ms_Loop
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[61]"></a>NRF_Write_Reg</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NRF_Write_Reg &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTX_Mode
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRX_Mode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_IRQ
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01_INIT
</UL>

<P><STRONG><a name="[63]"></a>NRF_Read_Reg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NRF_Read_Reg &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_IRQ
</UL>

<P><STRONG><a name="[64]"></a>NRF_Read_Buf</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NRF_Read_Buf &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_CHECK
</UL>

<P><STRONG><a name="[65]"></a>NRF_Write_Buf</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NRF_Write_Buf &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_TxPacket
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_CHECK
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01_INIT
</UL>

<P><STRONG><a name="[51]"></a>NRF_CHECK</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NRF_CHECK &rArr; NRF_Write_Buf &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Buf
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Buf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
</UL>

<P><STRONG><a name="[4c]"></a>NRF_TxPacket</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = NRF_TxPacket &rArr; NRF_Write_Buf &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Buf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[52]"></a>NRF24L01_INIT</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NRF24L01_INIT &rArr; NRF_Write_Buf &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Buf
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
</UL>

<P><STRONG><a name="[66]"></a>SetRX_Mode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[67]"></a>SetTX_Mode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[4b]"></a>NRF_IRQ</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NRF_IRQ &rArr; NRF_Write_Reg &rArr; SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[53]"></a>NRF_GPIO_Interrupt_Init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NRF_GPIO_Interrupt_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
</UL>

<P><STRONG><a name="[68]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>

<P><STRONG><a name="[50]"></a>SPI1_INIT</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SPI1_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxFIFOThresholdConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
</UL>

<P><STRONG><a name="[62]"></a>SPI_RW</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_RW
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Buf
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Buf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SystemInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, system_stm32f0xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, system_stm32f0xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f0xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[57]"></a>ADC_DeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[59]"></a>ADC_Init</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[58]"></a>ADC_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[5c]"></a>ADC_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[a9]"></a>ADC_ClockModeConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>ADC_JitterCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>ADC_AutoPowerOffCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>ADC_WaitModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>ADC_AnalogWatchdogSingleChannelCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>ADC_TempSensorCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>ADC_VrefintCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>ADC_VbatCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>ADC_ChannelConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[b4]"></a>ADC_ContinuousModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>ADC_OverrunModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>ADC_GetCalibrationFactor</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[b7]"></a>ADC_StopOfConversion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>ADC_StartOfConversion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[5f]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[b8]"></a>ADC_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>ADC_DMARequestModeConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>ADC_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[bb]"></a>ADC_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>ADC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>EXTI_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>EXTI_Init</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>EXTI_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>EXTI_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[c4]"></a>RCC_DeInit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>RCC_HSEConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[77]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[c6]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>RCC_HSICmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>RCC_AdjustHSI14CalibrationValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>RCC_HSI14Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>RCC_HSI14ADCRequestCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>RCC_LSEConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>RCC_LSEDriveConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>RCC_LSICmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>RCC_PLLCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>RCC_HSI48Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>RCC_PREDIV1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>RCC_MCOConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>RCC_PCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>RCC_CECCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>RCC_I2CCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>RCC_USARTCLKConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>

<P><STRONG><a name="[dd]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_GPIO_Interrupt_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_INIT
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_INIT
</UL>

<P><STRONG><a name="[55]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
</UL>

<P><STRONG><a name="[6b]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[7d]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[76]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[7a]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[e0]"></a>RCC_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>RCC_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[e4]"></a>SPI_StructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>SPI_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[e5]"></a>I2S_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>I2S_Init</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, stm32f0xx_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[70]"></a>SPI_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[e6]"></a>SPI_TIModeCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>I2S_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>SPI_RxFIFOThresholdConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[e9]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>SPI_NSSPulseModeCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>SPI_SendData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
</UL>

<P><STRONG><a name="[ed]"></a>SPI_I2S_SendData16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>SPI_ReceiveData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
</UL>

<P><STRONG><a name="[ee]"></a>SPI_I2S_ReceiveData16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>SPI_CRCLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>SPI_CalculateCRC</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>SPI_TransmitCRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>SPI_GetCRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>SPI_LastDMATransferCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>SPI_GetTransmissionFIFOStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>SPI_GetReceptionFIFOStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RW
</UL>

<P><STRONG><a name="[f9]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>GPIO_DeInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphResetCmd
</UL>

<P><STRONG><a name="[56]"></a>GPIO_Init</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit6
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit5
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcInit0
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_GPIO_Interrupt_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_INIT
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_INIT
</UL>

<P><STRONG><a name="[fb]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[fd]"></a>GPIO_ReadInputData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTX_Mode
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRX_Mode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Buf
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Buf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDALL_FLASH
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_TxPacket
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01_INIT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[49]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTX_Mode
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRX_Mode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Buf
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Buf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Read_Reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_Write_Reg
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDALL_FLASH
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_TxPacket
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01_INIT
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_System_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[100]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[108]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[109]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[10a]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[10b]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inspaire
</UL>

<P><STRONG><a name="[30]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[35]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[10c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[10d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[10e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[74]"></a>SetSysClock</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, system_stm32f0xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[82]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
